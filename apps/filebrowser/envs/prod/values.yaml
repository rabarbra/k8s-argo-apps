replicaCount: 1
ingress:
  # -- Enable the use of the ingress controller to access the web UI
  enabled: true
  # -- Class name of the Ingress
  className: nginx
  # -- Annotations for the Ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 50g
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  # -- Hosts for the ingress
  # @default -- see [values.yaml](values.yaml)
  hosts:
    - host: files.rabarbra.me
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
   - secretName: filebrowser-tls
     hosts:
       - files.rabarbra.me

rootDir:
  type: pvc
  readOnly: false
  hostPath:
    path: /
  pvc:
    # -- Existing claim for the root directory
    existingClaim: ""
    # -- Storage class name for the root directory PVC
    storageClassName: "nfs-client"
    # -- Access modes for the root directory PVC
    accessModes:
      - ReadWriteOnce
    # -- Size for the root directory PVC
    size: 2Gi

db:
  pvc:
    # -- Enable persistence for database
    enabled: true
    # -- Existing claim for the database
    existingClaim: ""
    # -- Storage class name for the database PVC
    storageClassName: ""
    # -- Access modes for the database PVC
    accessModes:
      - ReadWriteOnce
    # -- Size for the database PVC
    size: 256Ki

# -- Deployment strategy to use
strategy:
  type: Recreate

# -- Liveness probe configuration
livenessProbe: {}

# -- Readiness probe configuration
# @default -- see [values.yaml](values.yaml)
readinessProbe:
  httpGet:
    path: /health
    port: http

# -- Set of initContainers for the deployment
initContainers: []

# -- File Browser application specific configuration
# @default -- see [values.yaml](values.yaml)
config:
  port: 8080
  baseURL: ""
  address: ""
  log: stdout
  database: /db/database.db
  root: /rootdir
